@import '../abstracts/variables/colors';
@import '../abstracts/variables/mixins';

:root {
  --offset: 2rem;
}

// $cols - number of column
// n - number of items   
@mixin moveInGrid($cols, $n) {
  $rows: ceil($n / $cols);
  
  .grid {       
    grid-template-columns: repeat($cols, 1fr);
    grid-template-rows: repeat($rows, 100% / $rows);
    li:last-child:after,
    li:last-child:before {
      left: 100% * (($cols - $n) % $cols);
      transform: translate3d(-100% * (($cols - 1) / 2), -100% * (($rows - 1) / 2), 0);
    }
    
    @for $i from 1 through $n - 1 {
      $x: ($cols - $i) % $cols;
      $y: $rows - floor(($i - 1) / $cols) - 1;
      li:nth-child(#{$i}):hover ~ li:last-child:after,
      li:nth-child(#{$i}):hover ~ li:last-child:before {
          transform: translate3d(-$x*100%, -$y*100%, 0);   
      }
    }
    
    li:last-child:hover:after,
    li:last-child:hover:before {
      transform: translate3d(-100% * (($cols - $n) % $cols), 0%, 0);  
    }
  }
}

#featured {
    padding: 100px 0;

    h2 {
      margin-bottom:100px;
    }
 
    a {
        display: block;
        width: 100%;
        height: 100%;
        aspect-ratio:1/1;
    }
      
    $offset: var(--offset);

    img {
        display: block;
        height: 100%;
        max-width: 100%;
        width: 100%;
        object-fit: cover;
    }

    .grid {
      display: grid;
      grid-gap: 0;
      overflow: hidden;
      list-style: none;
      padding: 0;
        
      li {
        position: relative;
        padding:15px;
        margin:0;
      }

      li:hover ~ li:last-child:after,
      li:last-child:hover:after,
      li:hover ~ li:last-child:before,
      li:last-child:hover:before {
        opacity: 1;
        transition: 1s ease;
      }

      li:last-child:after,
      li:last-child:before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        pointer-events: none;
        clip-path:polygon($offset $offset, $offset calc(100% - #{$offset}), calc(100% - #{$offset}) calc(100% - #{$offset}), calc(100% - #{$offset}) $offset);
        -webkit-clip-path:polygon($offset $offset, $offset calc(100% - #{$offset}), calc(100% - #{$offset}) calc(100% - #{$offset}), calc(100% - #{$offset}) $offset);
        opacity: 0;
        transition: opacity 1s, transform 1s 1s, background 1s;
      }
       
      li:last-child:after {
        mix-blend-mode: multiply;
        background: $color__secondary-accent;
      }

      li:last-child:before {
        backdrop-filter: grayscale(100%) blur(2px);
        -webkit-backdrop-filter: grayscale(100%) blur(2px);
      }
      
      .description {
        font-family: "Hind", sans-serif;
        font-size: 1.25rem;
        position: absolute;
        display: block;
        right: 0;
        left: 0;
        text-align: center;
        top: 50%;
        width: 100%;
        margin: auto;
        color: #fff;
        z-index: 100;
        opacity: 0;
        transform: translate3d(0, -50%, 0);
        transition: .3s 0s;
      }
      
      li:hover .description {
        opacity: 1; 
        transition: .6s .3s;
      }

      //colors (optional)
      //@include colors(8,[#1A237E, #b5a1b7, #aaafc3, #daa384, #A5D6A7, #6c4331, #555, #a88504]);
    }
       
    @include moveInGrid(4, 8);
      
}

@media screen and (max-width: 991px) {
  #featured {
    @include moveInGrid(2, 8);

  }
}

@media screen and (max-width: 480px) {
  #featured {
    @include moveInGrid(1, 8);
  }
}



